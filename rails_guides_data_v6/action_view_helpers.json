[{"code":[],"body":"WIP: Not all the helpers are listed here. For a full list see the API documentationThe following is only a brief overview summary of the helpers available in Action View. It's recommended that you review the API Documentation, which covers all of the helpers in more detail, but this should serve as a good starting point.","title":"1 Overview of helpers provided by Action View","anchor":"#overview-of-helpers-provided-by-action-view"},{"title":"1.1 AssetTagHelper","anchor":"#assettaghelper","code":["\nconfig.asset_host = \"assets.example.com\"\nimage_tag(\"rails.png\")\n# => <img src=\"http://assets.example.com/images/rails.png\" />\n\nconfig.asset_host = \"assets.example.com\"\nimage_tag(\"rails.png\")\n# => <img src=\"http://assets.example.com/images/rails.png\" />\n\nCopy\n"],"body":"This module provides methods for generating HTML that links views to assets such as images, JavaScript files, stylesheets, and feeds.By default, Rails links to these assets on the current host in the public folder, but you can direct Rails to link to assets from a dedicated assets server by setting config.asset_host in the application configuration, typically in config/environments/production.rb. For example, let's say your asset host is assets.example.com:"},{"code":["\nauto_discovery_link_tag(:rss, \"http://www.example.com/feed.rss\", { title: \"RSS Feed\" })\n# => <link rel=\"alternate\" type=\"application/rss+xml\" title=\"RSS Feed\" href=\"http://www.example.com/feed.rss\" />\n\nauto_discovery_link_tag(:rss, \"http://www.example.com/feed.rss\", { title: \"RSS Feed\" })\n# => <link rel=\"alternate\" type=\"application/rss+xml\" title=\"RSS Feed\" href=\"http://www.example.com/feed.rss\" />\n\nCopy\n"],"body":"Returns a link tag that browsers and feed readers can use to auto-detect an RSS, Atom, or JSON feed.","title":"1.1.1 auto_discovery_link_tag","anchor":"#auto-discovery-link-tag"},{"code":["\nimage_path(\"edit.png\") # => /assets/edit.png\n\nimage_path(\"edit.png\") # => /assets/edit.png\n\nCopy\n","\nimage_path(\"edit.png\")\n# => /assets/edit-2d1a2db63fc738690021fedb5a65b68e.png\n\nimage_path(\"edit.png\")\n# => /assets/edit-2d1a2db63fc738690021fedb5a65b68e.png\n\nCopy\n"],"body":"Computes the path to an image asset in the app/assets/images directory. Full paths from the document root will be passed through. Used internally by image_tag to build the image path.Fingerprint will be added to the filename if config.assets.digest is set to true.","title":"1.1.2 image_path","anchor":"#image-path"},{"code":["\nimage_url(\"edit.png\") # => http://www.example.com/assets/edit.png\n\nimage_url(\"edit.png\") # => http://www.example.com/assets/edit.png\n\nCopy\n"],"body":"Computes the URL to an image asset in the app/assets/images directory. This will call image_path internally and merge with your current host or your asset host.","title":"1.1.3 image_url","anchor":"#image-url"},{"code":["\nimage_tag(\"icon.png\") # => <img src=\"/assets/icon.png\" />\n\nimage_tag(\"icon.png\") # => <img src=\"/assets/icon.png\" />\n\nCopy\n"],"body":"Returns an HTML image tag for the source. The source can be a full path or a file that exists in your app/assets/images directory.","title":"1.1.4 image_tag","anchor":"#image-tag"},{"code":["\njavascript_include_tag \"common\"\n# => <script src=\"/assets/common.js\"></script>\n\njavascript_include_tag \"common\"\n# => <script src=\"/assets/common.js\"></script>\n\nCopy\n"],"body":"Returns an HTML script tag for each of the sources provided. You can pass in the filename (.js extension is optional) of JavaScript files that exist in your app/assets/javascripts directory for inclusion into the current page or you can pass the full path relative to your document root.","title":"1.1.5 javascript_include_tag","anchor":"#javascript-include-tag"},{"code":["\njavascript_path \"common\" # => /assets/common.js\n\njavascript_path \"common\" # => /assets/common.js\n\nCopy\n"],"body":"Computes the path to a JavaScript asset in the app/assets/javascripts directory. If the source filename has no extension, .js will be appended. Full paths from the document root will be passed through. Used internally by javascript_include_tag to build the script path.","title":"1.1.6 javascript_path","anchor":"#javascript-path"},{"code":["\njavascript_url \"common\"\n# => http://www.example.com/assets/common.js\n\njavascript_url \"common\"\n# => http://www.example.com/assets/common.js\n\nCopy\n"],"body":"Computes the URL to a JavaScript asset in the app/assets/javascripts directory. This will call javascript_path internally and merge with your current host or your asset host.","title":"1.1.7 javascript_url","anchor":"#javascript-url"},{"code":["\nstylesheet_link_tag \"application\"\n# => <link href=\"/assets/application.css\" media=\"screen\" rel=\"stylesheet\" />\n\nstylesheet_link_tag \"application\"\n# => <link href=\"/assets/application.css\" media=\"screen\" rel=\"stylesheet\" />\n\nCopy\n"],"body":"Returns a stylesheet link tag for the sources specified as arguments. If you don't specify an extension, .css will be appended automatically.","title":"1.1.8 stylesheet_link_tag","anchor":"#stylesheet-link-tag"},{"code":["\nstylesheet_path \"application\" # => /assets/application.css\n\nstylesheet_path \"application\" # => /assets/application.css\n\nCopy\n"],"body":"Computes the path to a stylesheet asset in the app/assets/stylesheets directory. If the source filename has no extension, .css will be appended. Full paths from the document root will be passed through. Used internally by stylesheet_link_tag to build the stylesheet path.","title":"1.1.9 stylesheet_path","anchor":"#stylesheet-path"},{"code":["\nstylesheet_url \"application\"\n# => http://www.example.com/assets/application.css\n\nstylesheet_url \"application\"\n# => http://www.example.com/assets/application.css\n\nCopy\n"],"body":"Computes the URL to a stylesheet asset in the app/assets/stylesheets directory. This will call stylesheet_path internally and merge with your current host or your asset host.","title":"1.1.10 stylesheet_url","anchor":"#stylesheet-url"},{"code":[],"body":"","title":"1.2 AtomFeedHelper","anchor":"#atomfeedhelper"},{"title":"1.2.1 atom_feed","anchor":"#atom-feed","code":["\nresources :articles\n\nresources :articles\n\nCopy\n","\ndef index\n  @articles = Article.all\n\n  respond_to do |format|\n    format.html\n    format.atom\n  end\nend\n\ndef index\n  @articles = Article.all\n\n  respond_to do |format|\n    format.html\n    format.atom\n  end\nend\n\nCopy\n","\natom_feed do |feed|\n  feed.title(\"Articles Index\")\n  feed.updated(@articles.first.created_at)\n\n  @articles.each do |article|\n    feed.entry(article) do |entry|\n      entry.title(article.title)\n      entry.content(article.body, type: 'html')\n\n      entry.author do |author|\n        author.name(article.author_name)\n      end\n    end\n  end\nend\n\natom_feed do |feed|\n  feed.title(\"Articles Index\")\n  feed.updated(@articles.first.created_at)\n\n  @articles.each do |article|\n    feed.entry(article) do |entry|\n      entry.title(article.title)\n      entry.content(article.body, type: 'html')\n\n      entry.author do |author|\n        author.name(article.author_name)\n      end\n    end\n  end\nend\n\nCopy\n"],"body":"This helper makes building an Atom feed easy. Here's a full usage example:config/routes.rbapp/controllers/articles_controller.rbapp/views/articles/index.atom.builder"},{"code":[],"body":"","title":"1.3 BenchmarkHelper","anchor":"#benchmarkhelper"},{"title":"1.3.1 benchmark","anchor":"#benchmark","code":["\n<% benchmark \"Process data files\" do %>\n  <%= expensive_files_operation %>\n<% end %>\n\n<% benchmark \"Process data files\" do %>\n  <%= expensive_files_operation %>\n<% end %>\n\nCopy\n"],"body":"Allows you to measure the execution time of a block in a template and records the result to the log. Wrap this block around expensive operations or possible bottlenecks to get a time reading for the operation.This would add something like \"Process data files (0.34523)\" to the log, which you can then use to compare timings when optimizing your code."},{"title":"1.4 CacheHelper","anchor":"#cachehelper","code":[],"body":""},{"title":"1.4.1 cache","anchor":"#cache","code":["\n<% cache do %>\n  <%= render \"shared/footer\" %>\n<% end %>\n\n<% cache do %>\n  <%= render \"shared/footer\" %>\n<% end %>\n\nCopy\n"],"body":"A method for caching fragments of a view rather than an entire action or page. This technique is useful for caching pieces like menus, lists of news topics, static HTML fragments, and so on. This method takes a block that contains the content you wish to cache. See AbstractController::Caching::Fragments for more information."},{"code":[],"body":"","title":"1.5 CaptureHelper","anchor":"#capturehelper"},{"title":"1.5.1 capture","anchor":"#capture","code":["\n<% @greeting = capture do %>\n  <p>Welcome! The date and time is <%= Time.now %></p>\n<% end %>\n\n<% @greeting = capture do %>\n  <p>Welcome! The date and time is <%= Time.now %></p>\n<% end %>\n\nCopy\n","\n<html>\n  <head>\n    <title>Welcome!</title>\n  </head>\n  <body>\n    <%= @greeting %>\n  </body>\n</html>\n\n<html>\n  <head>\n    <title>Welcome!</title>\n  </head>\n  <body>\n    <%= @greeting %>\n  </body>\n</html>\n\nCopy\n"],"body":"The capture method allows you to extract part of a template into a variable. You can then use this variable anywhere in your templates or layout.The captured variable can then be used anywhere else."},{"code":["\n<html>\n  <head>\n    <title>Welcome!</title>\n    <%= yield :special_script %>\n  </head>\n  <body>\n    <p>Welcome! The date and time is <%= Time.now %></p>\n  </body>\n</html>\n\n<html>\n  <head>\n    <title>Welcome!</title>\n    <%= yield :special_script %>\n  </head>\n  <body>\n    <p>Welcome! The date and time is <%= Time.now %></p>\n  </body>\n</html>\n\nCopy\n","\n<p>This is a special page.</p>\n\n<% content_for :special_script do %>\n  <script>alert('Hello!')</script>\n<% end %>\n\n<p>This is a special page.</p>\n\n<% content_for :special_script do %>\n  <script>alert('Hello!')</script>\n<% end %>\n\nCopy\n"],"body":"Calling content_for stores a block of markup in an identifier for later use. You can make subsequent calls to the stored content in other templates or the layout by passing the identifier as an argument to yield.For example, let's say we have a standard application layout, but also a special page that requires certain JavaScript that the rest of the site doesn't need. We can use content_for to include this JavaScript on our special page without fattening up the rest of the site.app/views/layouts/application.html.erbapp/views/articles/special.html.erb","title":"1.5.2 content_for","anchor":"#content-for"},{"code":[],"body":"","title":"1.6 DateHelper","anchor":"#datehelper"},{"title":"1.6.1 distance_of_time_in_words","anchor":"#distance-of-time-in-words","code":["\ndistance_of_time_in_words(Time.now, Time.now + 15.seconds)\n# => less than a minute\ndistance_of_time_in_words(Time.now, Time.now + 15.seconds, include_seconds: true)\n# => less than 20 seconds\n\ndistance_of_time_in_words(Time.now, Time.now + 15.seconds)\n# => less than a minute\ndistance_of_time_in_words(Time.now, Time.now + 15.seconds, include_seconds: true)\n# => less than 20 seconds\n\nCopy\n"],"body":"Reports the approximate distance in time between two Time or Date objects or integers as seconds. Set include_seconds to true if you want more detailed approximations."},{"code":["\ntime_ago_in_words(3.minutes.from_now) # => 3 minutes\n\ntime_ago_in_words(3.minutes.from_now) # => 3 minutes\n\nCopy\n"],"body":"Like distance_of_time_in_words, but where to_time is fixed to Time.now.","title":"1.6.2 time_ago_in_words","anchor":"#time-ago-in-words"},{"code":["\nmy_hash = { 'first' => 1, 'second' => 'two', 'third' => [1,2,3] }\ndebug(my_hash)\n\nmy_hash = { 'first' => 1, 'second' => 'two', 'third' => [1,2,3] }\ndebug(my_hash)\n\nCopy\n","\n<pre class='debug_dump'>---\nfirst: 1\nsecond: two\nthird:\n- 1\n- 2\n- 3\n</pre>\n\n<pre class='debug_dump'>---\nfirst: 1\nsecond: two\nthird:\n- 1\n- 2\n- 3\n</pre>\n\nCopy\n"],"body":"Returns a pre tag that has object dumped by YAML. This creates a very readable way to inspect an object.","title":"1.7 DebugHelper","anchor":"#debughelper"},{"code":[],"body":"Form helpers are designed to make working with models much easier compared to using just standard HTML elements by providing a set of methods for creating forms based on your models. This helper generates the HTML for forms, providing a method for each sort of input (e.g., text, password, select, and so on). When the form is submitted (i.e., when the user hits the submit button or form.submit is called via JavaScript), the form inputs will be bundled into the params object and passed back to the controller.You can learn more about form helpers in the Action View Form Helpers\nGuide.","title":"1.8 FormHelper","anchor":"#formhelper"},{"title":"1.9 JavaScriptHelper","anchor":"#javascripthelper","code":[],"body":"Provides functionality for working with JavaScript in your views."},{"title":"1.9.1 escape_javascript","anchor":"#escape-javascript","code":[],"body":"Escape carrier returns and single and double quotes for JavaScript segments."},{"title":"1.9.2 javascript_tag","anchor":"#javascript-tag","code":["\njavascript_tag \"alert('All is good')\"\n\njavascript_tag \"alert('All is good')\"\n\nCopy\n","\n<script>\n//<![CDATA[\nalert('All is good')\n//]]>\n</script>\n\n<script>\n//<![CDATA[\nalert('All is good')\n//]]>\n</script>\n\nCopy\n"],"body":"Returns a JavaScript tag wrapping the provided code."},{"code":[],"body":"Provides methods for converting numbers into formatted strings. Methods are provided for phone numbers, currency, percentage, precision, positional notation, and file size.","title":"1.10 NumberHelper","anchor":"#numberhelper"},{"title":"1.10.1 number_to_currency","anchor":"#number-to-currency","code":["\nnumber_to_currency(1234567890.50) # => $1,234,567,890.50\n\nnumber_to_currency(1234567890.50) # => $1,234,567,890.50\n\nCopy\n"],"body":"Formats a number into a currency string (e.g., $13.65)."},{"code":["\nnumber_to_human_size(1234)    # => 1.2 KB\nnumber_to_human_size(1234567) # => 1.2 MB\n\nnumber_to_human_size(1234)    # => 1.2 KB\nnumber_to_human_size(1234567) # => 1.2 MB\n\nCopy\n"],"body":"Formats the bytes in size into a more understandable representation; useful for reporting file sizes to users.","title":"1.10.2 number_to_human_size","anchor":"#number-to-human-size"},{"code":["\nnumber_to_percentage(100, precision: 0) # => 100%\n\nnumber_to_percentage(100, precision: 0) # => 100%\n\nCopy\n"],"body":"Formats a number as a percentage string.","title":"1.10.3 number_to_percentage","anchor":"#number-to-percentage"},{"code":["\nnumber_to_phone(1235551234) # => 123-555-1234\n\nnumber_to_phone(1235551234) # => 123-555-1234\n\nCopy\n"],"body":"Formats a number into a phone number (US by default).","title":"1.10.4 number_to_phone","anchor":"#number-to-phone"},{"code":["\nnumber_with_delimiter(12345678) # => 12,345,678\n\nnumber_with_delimiter(12345678) # => 12,345,678\n\nCopy\n"],"body":"Formats a number with grouped thousands using a delimiter.","title":"1.10.5 number_with_delimiter","anchor":"#number-with-delimiter"},{"code":["\nnumber_with_precision(111.2345)               # => 111.235\nnumber_with_precision(111.2345, precision: 2) # => 111.23\n\nnumber_with_precision(111.2345)               # => 111.235\nnumber_with_precision(111.2345, precision: 2) # => 111.23\n\nCopy\n"],"body":"Formats a number with the specified level of precision, which defaults to 3.","title":"1.10.6 number_with_precision","anchor":"#number-with-precision"},{"code":[],"body":"The SanitizeHelper module provides a set of methods for scrubbing text of undesired HTML elements.","title":"1.11 SanitizeHelper","anchor":"#sanitizehelper"},{"title":"1.11.1 sanitize","anchor":"#sanitize","code":["\nsanitize @article.body\n\nsanitize @article.body\n\nCopy\n","\nsanitize @article.body, tags: %w(table tr td), attributes: %w(id class style)\n\nsanitize @article.body, tags: %w(table tr td), attributes: %w(id class style)\n\nCopy\n","\nclass Application < Rails::Application\n  config.action_view.sanitized_allowed_tags = 'table', 'tr', 'td'\nend\n\nclass Application < Rails::Application\n  config.action_view.sanitized_allowed_tags = 'table', 'tr', 'td'\nend\n\nCopy\n"],"body":"This sanitize helper will HTML encode all tags and strip all attributes that aren't specifically allowed.If either the :attributes or :tags options are passed, only the mentioned attributes and tags are allowed and nothing else.To change defaults for multiple uses, for example adding table tags to the default:"},{"code":[],"body":"Sanitizes a block of CSS code.","title":"1.11.2 sanitize_css(style)","anchor":"#sanitize-css-style"},{"title":"1.11.3 strip_links(html)","anchor":"#strip-links-html","code":["\nstrip_links('<a href=\"https://rubyonrails.org\">Ruby on Rails</a>')\n# => Ruby on Rails\n\nstrip_links('<a href=\"https://rubyonrails.org\">Ruby on Rails</a>')\n# => Ruby on Rails\n\nCopy\n","\nstrip_links('emails to <a href=\"mailto:me@email.com\">me@email.com</a>.')\n# => emails to me@email.com.\n\nstrip_links('emails to <a href=\"mailto:me@email.com\">me@email.com</a>.')\n# => emails to me@email.com.\n\nCopy\n","\nstrip_links('Blog: <a href=\"http://myblog.com/\">Visit</a>.')\n# => Blog: Visit.\n\nstrip_links('Blog: <a href=\"http://myblog.com/\">Visit</a>.')\n# => Blog: Visit.\n\nCopy\n"],"body":"Strips all link tags from text leaving just the link text."},{"code":["\nstrip_tags(\"Strip <i>these</i> tags!\")\n# => Strip these tags!\n\nstrip_tags(\"Strip <i>these</i> tags!\")\n# => Strip these tags!\n\nCopy\n","\nstrip_tags(\"<b>Bold</b> no more!  <a href='more.html'>See more</a>\")\n# => Bold no more!  See more\n\nstrip_tags(\"<b>Bold</b> no more!  <a href='more.html'>See more</a>\")\n# => Bold no more!  See more\n\nCopy\n"],"body":"Strips all HTML tags from the html, including comments.\nThis functionality is powered by the rails-html-sanitizer gem.NB: The output may still contain unescaped '<', '>', '&' characters and confuse browsers.","title":"1.11.4 strip_tags(html)","anchor":"#strip-tags-html"},{"title":"1.12 UrlHelper","anchor":"#urlhelper","code":[],"body":"Provides methods to make links and get URLs that depend on the routing subsystem."},{"title":"1.12.1 url_for","anchor":"#url-for","code":["\nurl_for @profile\n# => /profiles/1\n\nurl_for [ @hotel, @booking, page: 2, line: 3 ]\n# => /hotels/1/bookings/1?line=3&page=2\n\nurl_for @profile\n# => /profiles/1\n\nurl_for [ @hotel, @booking, page: 2, line: 3 ]\n# => /hotels/1/bookings/1?line=3&page=2\n\nCopy\n"],"body":"Returns the URL for the set of options provided."},{"code":["\nlink_to \"Profile\", @profile\n# => <a href=\"/profiles/1\">Profile</a>\n\nlink_to \"Profile\", @profile\n# => <a href=\"/profiles/1\">Profile</a>\n\nCopy\n","\n<%= link_to @profile do %>\n  <strong><%= @profile.name %></strong> -- <span>Check it out!</span>\n<% end %>\n\n<%= link_to @profile do %>\n  <strong><%= @profile.name %></strong> -- <span>Check it out!</span>\n<% end %>\n\nCopy\n","\n<a href=\"/profiles/1\">\n  <strong>David</strong> -- <span>Check it out!</span>\n</a>\n\n<a href=\"/profiles/1\">\n  <strong>David</strong> -- <span>Check it out!</span>\n</a>\n\nCopy\n"],"body":"Links to a URL derived from url_for under the hood. Primarily used to\ncreate RESTful resource links, which for this example, boils down to\nwhen passing models to link_to.ExamplesYou can use a block as well if your link target can't fit in the name parameter. ERB example:would output:See the API Documentation for more information","title":"1.12.2 link_to","anchor":"#link-to"},{"title":"1.12.3 button_to","anchor":"#button-to","code":["\n<%= button_to \"Sign in\", sign_in_path %>\n\n<%= button_to \"Sign in\", sign_in_path %>\n\nCopy\n","\n<form method=\"post\" action=\"/sessions\" class=\"button_to\">\n  <input type=\"submit\" value=\"Sign in\" />\n</form>\n\n<form method=\"post\" action=\"/sessions\" class=\"button_to\">\n  <input type=\"submit\" value=\"Sign in\" />\n</form>\n\nCopy\n"],"body":"Generates a form that submits to the passed URL. The form has a submit button\nwith the value of the name.would roughly output something like:See the API Documentation for more information"},{"title":"1.13 CsrfHelper","anchor":"#csrfhelper","code":["\n<%= csrf_meta_tags %>\n\n<%= csrf_meta_tags %>\n\nCopy\n"],"body":"Returns meta tags \"csrf-param\" and \"csrf-token\" with the name of the cross-site\nrequest forgery protection parameter and token, respectively."}]