[{"code":[],"body":"The instrumentation API provided by Active Support allows developers to provide hooks which other developers may hook into. There are several of these within the Rails framework. With this API, developers can choose to be notified when certain events occur inside their application or another piece of Ruby code.For example, there is a hook provided within Active Record that is called every time Active Record uses an SQL query on a database. This hook could be subscribed to, and used to track the number of queries during a certain action. There's another hook around the processing of an action of a controller. This could be used, for instance, to track how long a specific action has taken.You are even able to create your own events inside your application which you can later subscribe to.","title":"1 Introduction to instrumentation","anchor":"#introduction-to-instrumentation"},{"title":"2 Subscribing to an event","anchor":"#subscribing-to-an-event","code":["\nActiveSupport::Notifications.subscribe \"process_action.action_controller\" do |name, started, finished, unique_id, data|\n  # your own custom stuff\n  Rails.logger.info \"#{name} Received! (started: #{started}, finished: #{finished})\" # process_action.action_controller Received (started: 2019-05-05 13:43:57 -0800, finished: 2019-05-05 13:43:58 -0800)\nend\n\nActiveSupport::Notifications.subscribe \"process_action.action_controller\" do |name, started, finished, unique_id, data|\n  # your own custom stuff\n  Rails.logger.info \"#{name} Received! (started: #{started}, finished: #{finished})\" # process_action.action_controller Received (started: 2019-05-05 13:43:57 -0800, finished: 2019-05-05 13:43:58 -0800)\nend\n\nCopy\n","\nActiveSupport::Notifications.monotonic_subscribe \"process_action.action_controller\" do |name, started, finished, unique_id, data|\n  # your own custom stuff\n  Rails.logger.info \"#{name} Received! (started: #{started}, finished: #{finished})\" # process_action.action_controller Received (started: 1560978.425334, finished: 1560979.429234)\nend\n\nActiveSupport::Notifications.monotonic_subscribe \"process_action.action_controller\" do |name, started, finished, unique_id, data|\n  # your own custom stuff\n  Rails.logger.info \"#{name} Received! (started: #{started}, finished: #{finished})\" # process_action.action_controller Received (started: 1560978.425334, finished: 1560979.429234)\nend\n\nCopy\n","\nActiveSupport::Notifications.subscribe \"process_action.action_controller\" do |*args|\n  event = ActiveSupport::Notifications::Event.new *args\n\n  event.name      # => \"process_action.action_controller\"\n  event.duration  # => 10 (in milliseconds)\n  event.payload   # => {:extra=>information}\n\n  Rails.logger.info \"#{event} Received!\"\nend\n\nActiveSupport::Notifications.subscribe \"process_action.action_controller\" do |*args|\n  event = ActiveSupport::Notifications::Event.new *args\n\n  event.name      # => \"process_action.action_controller\"\n  event.duration  # => 10 (in milliseconds)\n  event.payload   # => {:extra=>information}\n\n  Rails.logger.info \"#{event} Received!\"\nend\n\nCopy\n","\nActiveSupport::Notifications.subscribe \"process_action.action_controller\" do |event|\n  event.name      # => \"process_action.action_controller\"\n  event.duration  # => 10 (in milliseconds)\n  event.payload   # => {:extra=>information}\n\n  Rails.logger.info \"#{event} Received!\"\nend\n\nActiveSupport::Notifications.subscribe \"process_action.action_controller\" do |event|\n  event.name      # => \"process_action.action_controller\"\n  event.duration  # => 10 (in milliseconds)\n  event.payload   # => {:extra=>information}\n\n  Rails.logger.info \"#{event} Received!\"\nend\n\nCopy\n","\nActiveSupport::Notifications.subscribe \"process_action.action_controller\" do |*args|\n  data = args.extract_options!\n  data # { extra: :information }\nend\n\nActiveSupport::Notifications.subscribe \"process_action.action_controller\" do |*args|\n  data = args.extract_options!\n  data # { extra: :information }\nend\n\nCopy\n","\nActiveSupport::Notifications.subscribe /action_controller/ do |*args|\n  # inspect all ActionController events\nend\n\nActiveSupport::Notifications.subscribe /action_controller/ do |*args|\n  # inspect all ActionController events\nend\n\nCopy\n"],"body":"Subscribing to an event is easy. Use ActiveSupport::Notifications.subscribe with a block to\nlisten to any notification.The block receives the following arguments:If you are concerned about the accuracy of started and finished to compute a precise elapsed time then use ActiveSupport::Notifications.monotonic_subscribe. The given block would receive the same arguments as above but the started and finished will have values with an accurate monotonic time instead of wall-clock time.Defining all those block arguments each time can be tedious. You can easily create an ActiveSupport::Notifications::Event\nfrom block arguments like this:You may also pass a block that accepts only one argument, and it will receive an event object:Most times you only care about the data itself. Here is a shortcut to just get the data.You may also subscribe to events matching a regular expression. This enables you to subscribe to\nmultiple events at once. Here's how to subscribe to everything from ActionController."},{"code":[],"body":"Within the Ruby on Rails framework, there are a number of hooks provided for common events. These are detailed below.","title":"3 Rails framework hooks","anchor":"#rails-framework-hooks"},{"title":"4 Action Controller","anchor":"#action-controller","code":[],"body":""},{"title":"4.1 write_fragment.action_controller","anchor":"#write-fragment-action-controller","code":["\n{\n  key: 'posts/1-dashboard-view'\n}\n\n{\n  key: 'posts/1-dashboard-view'\n}\n\nCopy\n"],"body":""},{"code":["\n{\n  key: 'posts/1-dashboard-view'\n}\n\n{\n  key: 'posts/1-dashboard-view'\n}\n\nCopy\n"],"body":"","title":"4.2 read_fragment.action_controller","anchor":"#read-fragment-action-controller"},{"code":["\n{\n  key: 'posts/1-dashboard-view'\n}\n\n{\n  key: 'posts/1-dashboard-view'\n}\n\nCopy\n"],"body":"","title":"4.3 expire_fragment.action_controller","anchor":"#expire-fragment-action-controller"},{"code":["\n{\n  key: 'posts/1-dashboard-view'\n}\n\n{\n  key: 'posts/1-dashboard-view'\n}\n\nCopy\n"],"body":"","title":"4.4 exist_fragment?.action_controller","anchor":"#exist-fragment-questionmark-action-controller"},{"code":["\n{\n  path: '/users/1'\n}\n\n{\n  path: '/users/1'\n}\n\nCopy\n"],"body":"","title":"4.5 write_page.action_controller","anchor":"#write-page-action-controller"},{"code":["\n{\n  path: '/users/1'\n}\n\n{\n  path: '/users/1'\n}\n\nCopy\n"],"body":"","title":"4.6 expire_page.action_controller","anchor":"#expire-page-action-controller"},{"code":["\n{\n  controller: \"PostsController\",\n  action: \"new\",\n  params: { \"action\" => \"new\", \"controller\" => \"posts\" },\n  headers: #<ActionDispatch::Http::Headers:0x0055a67a519b88>,\n  format: :html,\n  method: \"GET\",\n  path: \"/posts/new\"\n}\n\n{\n  controller: \"PostsController\",\n  action: \"new\",\n  params: { \"action\" => \"new\", \"controller\" => \"posts\" },\n  headers: #<ActionDispatch::Http::Headers:0x0055a67a519b88>,\n  format: :html,\n  method: \"GET\",\n  path: \"/posts/new\"\n}\n\nCopy\n"],"body":"","title":"4.7 start_processing.action_controller","anchor":"#start-processing-action-controller"},{"code":["\n{\n  controller: \"PostsController\",\n  action: \"index\",\n  params: {\"action\" => \"index\", \"controller\" => \"posts\"},\n  headers: #<ActionDispatch::Http::Headers:0x0055a67a519b88>,\n  format: :html,\n  method: \"GET\",\n  path: \"/posts\",\n  request: #<ActionDispatch::Request:0x00007ff1cb9bd7b8>,\n  status: 200,\n  view_runtime: 46.848,\n  db_runtime: 0.157\n}\n\n{\n  controller: \"PostsController\",\n  action: \"index\",\n  params: {\"action\" => \"index\", \"controller\" => \"posts\"},\n  headers: #<ActionDispatch::Http::Headers:0x0055a67a519b88>,\n  format: :html,\n  method: \"GET\",\n  path: \"/posts\",\n  request: #<ActionDispatch::Request:0x00007ff1cb9bd7b8>,\n  status: 200,\n  view_runtime: 46.848,\n  db_runtime: 0.157\n}\n\nCopy\n"],"body":"","title":"4.8 process_action.action_controller","anchor":"#process-action-action-controller"},{"code":[],"body":"","title":"4.9 send_file.action_controller","anchor":"#send-file-action-controller"},{"title":"4.10 send_data.action_controller","anchor":"#send-data-action-controller","code":[],"body":"ActionController does not add any specific information to the payload. All options are passed through to the payload."},{"title":"4.11 redirect_to.action_controller","anchor":"#redirect-to-action-controller","code":["\n{\n  status: 302,\n  location: \"http://localhost:3000/posts/new\",\n  request: #<ActionDispatch::Request:0x00007ff1cb9bd7b8>\n}\n\n{\n  status: 302,\n  location: \"http://localhost:3000/posts/new\",\n  request: #<ActionDispatch::Request:0x00007ff1cb9bd7b8>\n}\n\nCopy\n"],"body":""},{"code":["\n{\n  filter: \":halting_filter\"\n}\n\n{\n  filter: \":halting_filter\"\n}\n\nCopy\n"],"body":"","title":"4.12 halted_callback.action_controller","anchor":"#halted-callback-action-controller"},{"code":[],"body":"","title":"4.13 unpermitted_parameters.action_controller","anchor":"#unpermitted-parameters-action-controller"},{"code":[],"body":"","title":"5 Action Dispatch","anchor":"#action-dispatch"},{"title":"5.1 process_middleware.action_dispatch","anchor":"#process-middleware-action-dispatch","code":[],"body":""},{"code":[],"body":"","title":"6 Action View","anchor":"#action-view"},{"title":"6.1 render_template.action_view","anchor":"#render-template-action-view","code":["\n{\n  identifier: \"/Users/adam/projects/notifications/app/views/posts/index.html.erb\",\n  layout: \"layouts/application\"\n}\n\n{\n  identifier: \"/Users/adam/projects/notifications/app/views/posts/index.html.erb\",\n  layout: \"layouts/application\"\n}\n\nCopy\n"],"body":""},{"code":["\n{\n  identifier: \"/Users/adam/projects/notifications/app/views/posts/_form.html.erb\"\n}\n\n{\n  identifier: \"/Users/adam/projects/notifications/app/views/posts/_form.html.erb\"\n}\n\nCopy\n"],"body":"","title":"6.2 render_partial.action_view","anchor":"#render-partial-action-view"},{"code":["\n{\n  identifier: \"/Users/adam/projects/notifications/app/views/posts/_post.html.erb\",\n  count: 3,\n  cache_hits: 0\n}\n\n{\n  identifier: \"/Users/adam/projects/notifications/app/views/posts/_post.html.erb\",\n  count: 3,\n  cache_hits: 0\n}\n\nCopy\n"],"body":":cache_hits is only included if the collection is rendered with cached: true.","title":"6.3 render_collection.action_view","anchor":"#render-collection-action-view"},{"code":[],"body":"","title":"7 Active Record","anchor":"#active-record"},{"title":"7.1 sql.active_record","anchor":"#sql-active-record","code":["\n{\n  sql: \"SELECT \\\"posts\\\".* FROM \\\"posts\\\" \",\n  name: \"Post Load\",\n  connection: #<ActiveRecord::ConnectionAdapters::SQLite3Adapter:0x00007f9f7a838850>,\n  binds: [#<ActiveModel::Attribute::WithCastValue:0x00007fe19d15dc00>],\n  type_casted_binds: [11],\n  statement_name: nil\n}\n\n{\n  sql: \"SELECT \\\"posts\\\".* FROM \\\"posts\\\" \",\n  name: \"Post Load\",\n  connection: #<ActiveRecord::ConnectionAdapters::SQLite3Adapter:0x00007f9f7a838850>,\n  binds: [#<ActiveModel::Attribute::WithCastValue:0x00007fe19d15dc00>],\n  type_casted_binds: [11],\n  statement_name: nil\n}\n\nCopy\n"],"body":""},{"code":["\n{\n  record_count: 1,\n  class_name: \"User\"\n}\n\n{\n  record_count: 1,\n  class_name: \"User\"\n}\n\nCopy\n"],"body":"","title":"7.2 instantiation.active_record","anchor":"#instantiation-active-record"},{"code":[],"body":"","title":"8 Action Mailer","anchor":"#action-mailer"},{"title":"8.1 deliver.action_mailer","anchor":"#deliver-action-mailer","code":["\n{\n  mailer: \"Notification\",\n  message_id: \"4f5b5491f1774_181b23fc3d4434d38138e5@mba.local.mail\",\n  subject: \"Rails Guides\",\n  to: [\"users@rails.com\", \"dhh@rails.com\"],\n  from: [\"me@rails.com\"],\n  date: Sat, 10 Mar 2012 14:18:09 +0100,\n  mail: \"...\", # omitted for brevity\n  perform_deliveries: true\n}\n\n{\n  mailer: \"Notification\",\n  message_id: \"4f5b5491f1774_181b23fc3d4434d38138e5@mba.local.mail\",\n  subject: \"Rails Guides\",\n  to: [\"users@rails.com\", \"dhh@rails.com\"],\n  from: [\"me@rails.com\"],\n  date: Sat, 10 Mar 2012 14:18:09 +0100,\n  mail: \"...\", # omitted for brevity\n  perform_deliveries: true\n}\n\nCopy\n"],"body":""},{"code":["\n{\n  mailer: \"Notification\",\n  action: \"welcome_email\",\n  args: []\n}\n\n{\n  mailer: \"Notification\",\n  action: \"welcome_email\",\n  args: []\n}\n\nCopy\n"],"body":"","title":"8.2 process.action_mailer","anchor":"#process-action-mailer"},{"code":[],"body":"","title":"9 Active Support","anchor":"#active-support"},{"title":"9.1 cache_read.active_support","anchor":"#cache-read-active-support","code":[],"body":""},{"code":["\n{\n  key: \"name-of-complicated-computation\",\n  store: \"ActiveSupport::Cache::MemCacheStore\"\n}\n\n{\n  key: \"name-of-complicated-computation\",\n  store: \"ActiveSupport::Cache::MemCacheStore\"\n}\n\nCopy\n"],"body":"This event is only used when #fetch is called with a block.","title":"9.2 cache_generate.active_support","anchor":"#cache-generate-active-support"},{"code":["\n{\n  key: \"name-of-complicated-computation\",\n  store: \"ActiveSupport::Cache::MemCacheStore\"\n}\n\n{\n  key: \"name-of-complicated-computation\",\n  store: \"ActiveSupport::Cache::MemCacheStore\"\n}\n\nCopy\n"],"body":"This event is only used when #fetch is called with a block.","title":"9.3 cache_fetch_hit.active_support","anchor":"#cache-fetch-hit-active-support"},{"code":["\n{\n  key: \"name-of-complicated-computation\",\n  store: \"ActiveSupport::Cache::MemCacheStore\"\n}\n\n{\n  key: \"name-of-complicated-computation\",\n  store: \"ActiveSupport::Cache::MemCacheStore\"\n}\n\nCopy\n"],"body":"","title":"9.4 cache_write.active_support","anchor":"#cache-write-active-support"},{"code":["\n{\n  key: \"name-of-complicated-computation\",\n  store: \"ActiveSupport::Cache::MemCacheStore\"\n}\n\n{\n  key: \"name-of-complicated-computation\",\n  store: \"ActiveSupport::Cache::MemCacheStore\"\n}\n\nCopy\n"],"body":"","title":"9.5 cache_delete.active_support","anchor":"#cache-delete-active-support"},{"code":["\n{\n  key: \"name-of-complicated-computation\",\n  store: \"ActiveSupport::Cache::MemCacheStore\"\n}\n\n{\n  key: \"name-of-complicated-computation\",\n  store: \"ActiveSupport::Cache::MemCacheStore\"\n}\n\nCopy\n"],"body":"","title":"9.6 cache_exist?.active_support","anchor":"#cache-exist-questionmark-active-support"},{"code":[],"body":"","title":"10 Active Job","anchor":"#active-job"},{"title":"10.1 enqueue_at.active_job","anchor":"#enqueue-at-active-job","code":[],"body":""},{"code":[],"body":"","title":"10.2 enqueue.active_job","anchor":"#enqueue-active-job"},{"code":[],"body":"","title":"10.3 enqueue_retry.active_job","anchor":"#enqueue-retry-active-job"},{"code":[],"body":"","title":"10.4 perform_start.active_job","anchor":"#perform-start-active-job"},{"code":[],"body":"","title":"10.5 perform.active_job","anchor":"#perform-active-job"},{"code":[],"body":"","title":"10.6 retry_stopped.active_job","anchor":"#retry-stopped-active-job"},{"code":[],"body":"","title":"10.7 discard.active_job","anchor":"#discard-active-job"},{"code":[],"body":"","title":"11 Action Cable","anchor":"#action-cable"},{"title":"11.1 perform_action.action_cable","anchor":"#perform-action-action-cable","code":[],"body":""},{"code":[],"body":"","title":"11.2 transmit.action_cable","anchor":"#transmit-action-cable"},{"code":[],"body":"","title":"11.3 transmit_subscription_confirmation.action_cable","anchor":"#transmit-subscription-confirmation-action-cable"},{"code":[],"body":"","title":"11.4 transmit_subscription_rejection.action_cable","anchor":"#transmit-subscription-rejection-action-cable"},{"code":[],"body":"","title":"11.5 broadcast.action_cable","anchor":"#broadcast-action-cable"},{"code":[],"body":"","title":"12 Active Storage","anchor":"#active-storage"},{"title":"12.1 service_upload.active_storage","anchor":"#service-upload-active-storage","code":[],"body":""},{"code":[],"body":"","title":"12.2 service_streaming_download.active_storage","anchor":"#service-streaming-download-active-storage"},{"code":[],"body":"","title":"12.3 service_download_chunk.active_storage","anchor":"#service-download-chunk-active-storage"},{"code":[],"body":"","title":"12.4 service_download.active_storage","anchor":"#service-download-active-storage"},{"code":[],"body":"","title":"12.5 service_delete.active_storage","anchor":"#service-delete-active-storage"},{"code":[],"body":"","title":"12.6 service_delete_prefixed.active_storage","anchor":"#service-delete-prefixed-active-storage"},{"code":[],"body":"","title":"12.7 service_exist.active_storage","anchor":"#service-exist-active-storage"},{"code":[],"body":"","title":"12.8 service_url.active_storage","anchor":"#service-url-active-storage"},{"code":[],"body":"","title":"12.9 service_update_metadata.active_storage","anchor":"#service-update-metadata-active-storage"},{"title":"12.10 preview.active_storage","anchor":"#preview-active-storage","code":[],"body":""},{"code":[],"body":"","title":"12.11 transform.active_storage","anchor":"#transform-active-storage"},{"title":"13 Railties","anchor":"#railties","code":[],"body":""},{"title":"13.1 load_config_initializer.railties","anchor":"#load-config-initializer-railties","code":[],"body":""},{"code":[],"body":"","title":"14 Rails","anchor":"#rails"},{"title":"14.1 deprecation.rails","anchor":"#deprecation-rails","code":[],"body":""},{"code":[],"body":"If an exception happens during any instrumentation the payload will include\ninformation about it.","title":"15 Exceptions","anchor":"#exceptions"},{"code":["\nActiveSupport::Notifications.instrument \"my.custom.event\", this: :data do\n  # do your custom stuff here\nend\n\nActiveSupport::Notifications.instrument \"my.custom.event\", this: :data do\n  # do your custom stuff here\nend\n\nCopy\n","\nActiveSupport::Notifications.subscribe \"my.custom.event\" do |name, started, finished, unique_id, data|\n  puts data.inspect # {:this=>:data}\nend\n\nActiveSupport::Notifications.subscribe \"my.custom.event\" do |name, started, finished, unique_id, data|\n  puts data.inspect # {:this=>:data}\nend\n\nCopy\n","\nActiveSupport::Notifications.instrument \"my.custom.event\", this: :data\n\nActiveSupport::Notifications.subscribe \"my.custom.event\" do |name, started, finished, unique_id, data|\n  puts data.inspect # {:this=>:data}\nend\n\nActiveSupport::Notifications.instrument \"my.custom.event\", this: :data\n\nActiveSupport::Notifications.subscribe \"my.custom.event\" do |name, started, finished, unique_id, data|\n  puts data.inspect # {:this=>:data}\nend\n\nCopy\n"],"body":"Adding your own events is easy as well. ActiveSupport::Notifications will take care of\nall the heavy lifting for you. Simply call instrument with a name, payload and a block.\nThe notification will be sent after the block returns. ActiveSupport will generate the start and end times\nand add the instrumenter's unique ID. All data passed into the instrument call will make\nit into the payload.Here's an example:Now you can listen to this event with:You also have the option to call instrument without passing a block. This lets you leverage the\ninstrumentation infrastructure for other messaging uses.You should follow Rails conventions when defining your own events. The format is: event.library.\nIf your application is sending Tweets, you should create an event named tweet.twitter.","title":"16 Creating custom events","anchor":"#creating-custom-events"}]