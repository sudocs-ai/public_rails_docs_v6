[{"code":[],"body":"If you're upgrading an existing application, it's a great idea to have good test\ncoverage before going in. You should also first upgrade to Rails 4.1 in case you\nhaven't and make sure your application still runs as expected before attempting\nto upgrade to Rails 4.2. A list of things to watch out for when upgrading is\navailable in the guide Upgrading Ruby on\nRails.","title":"1 Upgrading to Rails 4.2","anchor":"#upgrading-to-rails-4-2"},{"title":"2 Major Features","anchor":"#major-features","code":[],"body":""},{"title":"2.1 Active Job","anchor":"#active-job","code":["\nclass TrashableCleanupJob < ActiveJob::Base\n  def perform(trashable, depth)\n    trashable.cleanup(depth)\n  end\nend\n\nclass TrashableCleanupJob < ActiveJob::Base\n  def perform(trashable, depth)\n    trashable.cleanup(depth)\n  end\nend\n\nCopy\n"],"body":"Active Job is a new framework in Rails 4.2. It is a common interface on top of\nqueuing systems like Resque, Delayed\nJob,\nSidekiq, and more.Jobs written with the Active Job API run on any of the supported queues thanks\nto their respective adapters. Active Job comes pre-configured with an inline\nrunner that executes jobs right away.Jobs often need to take Active Record objects as arguments. Active Job passes\nobject references as URIs (uniform resource identifiers) instead of marshalling\nthe object itself. The new Global ID\nlibrary builds URIs and looks up the objects they reference. Passing Active\nRecord objects as job arguments just works by using Global ID internally.For example, if trashable is an Active Record object, then this job runs\njust fine with no serialization involved:See the Active Job Basics guide for more\ninformation."},{"title":"2.2 Asynchronous Mails","anchor":"#asynchronous-mails","code":[],"body":"Building on top of Active Job, Action Mailer now comes with a deliver_later\nmethod that sends emails via the queue, so it doesn't block the controller or\nmodel if the queue is asynchronous (the default inline queue blocks).Sending emails right away is still possible with deliver_now."},{"title":"2.3 Adequate Record","anchor":"#adequate-record","code":["\nPost.find(1)  # First call generates and cache the prepared statement\nPost.find(2)  # Subsequent calls reuse the cached prepared statement\n\nPost.find_by_title('first post')\nPost.find_by_title('second post')\n\nPost.find_by(title: 'first post')\nPost.find_by(title: 'second post')\n\npost.comments\npost.comments(true)\n\nPost.find(1)  # First call generates and cache the prepared statement\nPost.find(2)  # Subsequent calls reuse the cached prepared statement\n\nPost.find_by_title('first post')\nPost.find_by_title('second post')\n\nPost.find_by(title: 'first post')\nPost.find_by(title: 'second post')\n\npost.comments\npost.comments(true)\n\nCopy\n"],"body":"Adequate Record is a set of performance improvements in Active Record that makes\ncommon find and find_by calls and some association queries up to 2x faster.It works by caching common SQL queries as prepared statements and reusing them\non similar calls, skipping most of the query-generation work on subsequent\ncalls. For more details, please refer to Aaron Patterson's blog\npost.Active Record will automatically take advantage of this feature on\nsupported operations without any user involvement or code changes. Here are\nsome examples of supported operations:It's important to highlight that, as the examples above suggest, the prepared\nstatements do not cache the values passed in the method calls; rather, they\nhave placeholders for them.Caching is not used in the following scenarios:"},{"code":[],"body":"New applications generated with Rails 4.2 now come with the Web\nConsole gem by default. Web Console adds\nan interactive Ruby console on every error page and provides a console view\nand controller helpers.The interactive console on error pages lets you execute code in the context of\nthe place where the exception originated. The console helper, if called\nanywhere in a view or controller, launches an interactive console with the final\ncontext, once rendering has completed.","title":"2.4 Web Console","anchor":"#web-console"},{"title":"2.5 Foreign Key Support","anchor":"#foreign-key-support","code":["\n# add a foreign key to `articles.author_id` referencing `authors.id`\nadd_foreign_key :articles, :authors\n\n# add a foreign key to `articles.author_id` referencing `users.lng_id`\nadd_foreign_key :articles, :users, column: :author_id, primary_key: \"lng_id\"\n\n# remove the foreign key on `accounts.branch_id`\nremove_foreign_key :accounts, :branches\n\n# remove the foreign key on `accounts.owner_id`\nremove_foreign_key :accounts, column: :owner_id\n\n# add a foreign key to `articles.author_id` referencing `authors.id`\nadd_foreign_key :articles, :authors\n\n# add a foreign key to `articles.author_id` referencing `users.lng_id`\nadd_foreign_key :articles, :users, column: :author_id, primary_key: \"lng_id\"\n\n# remove the foreign key on `accounts.branch_id`\nremove_foreign_key :accounts, :branches\n\n# remove the foreign key on `accounts.owner_id`\nremove_foreign_key :accounts, column: :owner_id\n\nCopy\n"],"body":"The migration DSL now supports adding and removing foreign keys. They are dumped\nto schema.rb as well. At this time, only the mysql, mysql2 and postgresql\nadapters support foreign keys.See the API documentation on\nadd_foreign_key\nand\nremove_foreign_key\nfor a full description."},{"title":"3 Incompatibilities","anchor":"#incompatibilities","code":[],"body":"Previously deprecated functionality has been removed. Please refer to the\nindividual components for new deprecations in this release.The following changes may require immediate action upon upgrade."},{"title":"3.1 render with a String Argument","anchor":"#render-with-a-string-argument","code":[],"body":"Previously, calling render \"foo/bar\" in a controller action was equivalent to\nrender file: \"foo/bar\". In Rails 4.2, this has been changed to mean\nrender template: \"foo/bar\" instead. If you need to render a file, please\nchange your code to use the explicit form (render file: \"foo/bar\") instead."},{"title":"3.2 respond_with / Class-Level respond_to","anchor":"#respond-with-class-level-respond-to","code":["\n# app/controllers/users_controller.rb\n\nclass UsersController < ApplicationController\n  respond_to :html, :json\n\n  def show\n    @user = User.find(params[:id])\n    respond_with @user\n  end\nend\n\n# app/controllers/users_controller.rb\n\nclass UsersController < ApplicationController\n  respond_to :html, :json\n\n  def show\n    @user = User.find(params[:id])\n    respond_with @user\n  end\nend\n\nCopy\n","\n# app/controllers/users_controller.rb\n\nclass UsersController < ApplicationController\n  def show\n    @user = User.find(params[:id])\n    respond_to do |format|\n      format.html\n      format.json { render json: @user }\n    end\n  end\nend\n\n# app/controllers/users_controller.rb\n\nclass UsersController < ApplicationController\n  def show\n    @user = User.find(params[:id])\n    respond_to do |format|\n      format.html\n      format.json { render json: @user }\n    end\n  end\nend\n\nCopy\n"],"body":"respond_with and the corresponding class-level respond_to have been moved\nto the responders gem. Add\ngem 'responders', '~> 2.0' to your Gemfile to use it:Instance-level respond_to is unaffected:"},{"code":[],"body":"Due to a change in Rack,\nrails server now listens on localhost instead of 0.0.0.0 by default. This\nshould have minimal impact on the standard development workflow as both\nhttp://127.0.0.1:3000 and http://localhost:3000 will continue to work as before\non your own machine.However, with this change you will no longer be able to access the Rails\nserver from a different machine, for example if your development environment\nis in a virtual machine and you would like to access it from the host machine.\nIn such cases, please start the server with rails server -b 0.0.0.0 to\nrestore the old behavior.If you do this, be sure to configure your firewall properly such that only\ntrusted machines on your network can access your development server.","title":"3.3 Default Host for rails server","anchor":"#default-host-for-rails-server"},{"title":"3.4 Changed status option symbols for render","anchor":"#changed-status-option-symbols-for-render","code":[],"body":"Due to a change in Rack, the symbols that the render method accepts for the :status option have changed:Keep in mind that if calling render with an unknown symbol, the response status will default to 500."},{"title":"3.5 HTML Sanitizer","anchor":"#html-sanitizer","code":[],"body":"The HTML sanitizer has been replaced with a new, more robust, implementation\nbuilt upon Loofah and\nNokogiri. The new sanitizer is\nmore secure and its sanitization is more powerful and flexible.Due to the new algorithm, the sanitized output may be different for certain\npathological inputs.If you have a particular need for the exact output of the old sanitizer, you\ncan add the rails-deprecated_sanitizer\ngem to the Gemfile, to have the old behavior. The gem does not issue\ndeprecation warnings because it is opt-in.rails-deprecated_sanitizer will be supported for Rails 4.2 only; it will not\nbe maintained for Rails 5.0.See this blog post\nfor more details on the changes in the new sanitizer."},{"title":"3.6 assert_select","anchor":"#assert-select","code":["\nassert_select \":match('id', ?)\", 'comment_1'\n\nassert_select \":match('id', ?)\", 'comment_1'\n\nCopy\n","\nassert_select(\":match('id', ?)\", /hello/)\n\nassert_select(\":match('id', ?)\", /hello/)\n\nCopy\n","\nExpected at least 1 element matching \"div:match('id', \"(?-mix:hello)\")\", found 0..\nExpected 0 to be >= 1.\n\nExpected at least 1 element matching \"div:match('id', \"(?-mix:hello)\")\", found 0..\nExpected 0 to be >= 1.\n\nCopy\n"],"body":"assert_select is now based on Nokogiri.\nAs a result, some previously-valid selectors are now unsupported. If your\napplication is using any of these spellings, you will need to update them:Furthermore substitutions have changed syntax.Now you have to use a :match CSS-like selector:Additionally Regexp substitutions look different when the assertion fails.\nNotice how /hello/ here:becomes \"(?-mix:hello)\":See the Rails Dom Testing documentation for more on assert_select."},{"title":"4 Railties","anchor":"#railties","code":[],"body":"Please refer to the Changelog for detailed changes."},{"title":"4.1 Removals","anchor":"#railties-removals","code":[],"body":""},{"code":[],"body":"","title":"4.2 Deprecations","anchor":"#railties-deprecations"},{"code":[],"body":"","title":"4.3 Notable changes","anchor":"#railties-notable-changes"},{"code":[],"body":"Please refer to the Changelog for detailed changes.","title":"5 Action Pack","anchor":"#action-pack"},{"title":"5.1 Removals","anchor":"#action-pack-removals","code":[],"body":""},{"code":[],"body":"","title":"5.2 Deprecations","anchor":"#action-pack-deprecations"},{"code":[],"body":"","title":"5.3 Notable changes","anchor":"#action-pack-notable-changes"},{"code":[],"body":"Please refer to the Changelog for detailed changes.","title":"6 Action View","anchor":"#action-view"},{"title":"6.1 Deprecations","anchor":"#action-view-deprecations","code":[],"body":""},{"code":[],"body":"","title":"6.2 Notable changes","anchor":"#action-view-notable-changes"},{"code":[],"body":"Please refer to the Changelog for detailed changes.","title":"7 Action Mailer","anchor":"#action-mailer"},{"title":"7.1 Deprecations","anchor":"#action-mailer-deprecations","code":[],"body":""},{"code":[],"body":"","title":"7.2 Notable changes","anchor":"#action-mailer-notable-changes"},{"code":[],"body":"Please refer to the Changelog for detailed changes.","title":"8 Active Record","anchor":"#active-record"},{"title":"8.1 Removals","anchor":"#active-record-removals","code":[],"body":""},{"code":[],"body":"","title":"8.2 Deprecations","anchor":"#active-record-deprecations"},{"code":[],"body":"","title":"8.3 Notable changes","anchor":"#active-record-notable-changes"},{"code":[],"body":"Please refer to the Changelog for detailed changes.","title":"9 Active Model","anchor":"#active-model"},{"title":"9.1 Removals","anchor":"#active-model-removals","code":[],"body":""},{"code":[],"body":"","title":"9.2 Deprecations","anchor":"#active-model-deprecations"},{"code":[],"body":"","title":"9.3 Notable changes","anchor":"#active-model-notable-changes"},{"code":[],"body":"Please refer to the Changelog for detailed changes.","title":"10 Active Support","anchor":"#active-support"},{"title":"10.1 Removals","anchor":"#removals","code":[],"body":""},{"code":[],"body":"","title":"10.2 Deprecations","anchor":"#deprecations"},{"code":[],"body":"","title":"10.3 Notable changes","anchor":"#notable-changes"},{"code":[],"body":"See the\nfull list of contributors to Rails for\nthe many people who spent many hours making Rails the stable and robust\nframework it is today. Kudos to all of them.","title":"11 Credits","anchor":"#credits"}]